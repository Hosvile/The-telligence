
local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

local Key = Key or key or Keys or keys or Whitelist or whitelist or "nil"

print(Key, "your Key")

getgenv().B64 = function (data)
return ((data:gsub('.', function(x)
    local r, b = '', x:byte()
    for i = 8, 1, -1 do
    r = r .. (b % 2 ^ i - b % 2 ^ (i - 1) > 0 and '1' or '0')
    end
    return r;
    end) .. '0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
    if (#x < 6) then
    return ''
    end
    local c = 0
    for i = 1, 6 do
    c = c + (x:sub(i, i) == '1' and 2 ^ (6 - i) or 0)
    end
    return b:sub(c + 1, c + 1)
    end) .. ({
        '', '==', '='
    })[#data % 3 + 1])
end


local Key_1 = B64(tostring("Vile"))

local Key_2 = B64(tostring("Hostile"))

    local Key_ = {
        [Key_1] = Key_1,
        [Key_2] = Key_2
    }
    
local Definer = false

local Check = B64(tostring(Key))

for i, v in pairs(Key_) do
if Check == v then
Definer = true
return Key or true
end
end

if Definer == false then
warn("Failure")
return wait(9e9)
elseif Definer == true then
warn("Success")
end

print("Executed")
